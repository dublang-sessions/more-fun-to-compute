#!socat

cycle mute
set loop inf
video "videos-blade-runner:01"

#!socat

|repeat 6

video "videos-12-monkeys:01"

video "videos-1984:04"

video "videos-dune:${VIDEO}"
vf set "cas:strength=${RAND}"

vf set "cas:strength=0.6"

set alpha blend


vf set "avgblur:sizeX=12:sizeY=12,cas:strength=1"

vf set "bilateral:sigmaS=200:sigmaR=0.25,cas:strength=1"



vf set "alphaextract"

video filters reference
https://ffmpeg.org/ffmpeg-filters.html#Video-Filters

seek 1845 absolute

show-text "teste teste hello world la la la LALALALA aaaaaaaaaaaaaaaaaaaaaaa a\n aaaaaaaaaaaa aa aa aa aa"

seek -2

ab-loop

#!dublang
|repeat 5

vim.env.VIDEO = string.format("%02d", math.random(10))
vim.env.RAND = string.format("%f", math.random())

vim.env.FREQ = math.random(200) + 100
vim.env.SEED = math.random(99) + 1
vim.env.SCENE = math.random(6)

#!supercollider
|repeat 5

s.scope;

(
  SynthDef.new(\saw, {
    arg cutoff = 1000, mul = 0.2, add = 1, freq = 400;
    var sig;
    sig = Saw.ar([30, 60]);
    sig = RLPF.ar(sig, freq, mul, add);
    Out.ar(0, sig);
  }).add;
)

~synth = Synth(\saw);

~synth.set(\add, 0.0);

~synth.set(\freq, ${FREQ} * 1.5);
~synth.set(\mul, 0.2);

~synth.set(\freq, ${FREQ} * 1.5);

~synth.set(\mul, 1 / ${SEED});

~synth.free;

#!tidalcycles

d1
  $ slow 2
  $ stut 4 0.75 0.5
  $ sound "super808" # n "<0.2 0.2 02 0.4 0.4>"
  # gain 1.2
  # shape 0.3
  # attack 1 # hold 2 # rel 2
  |+ shape (slow 16 $ sine * 0.2)
  |+ gain (slow 8 $ sine * 0.2)
  # squiz (${FREQ} / 50)
  # pan (slow 16 $ sine)

d2
  $ slow 4
  $ off 2 ((|+ up (${FREQ} / 5)) . (|+ gain 0.2))
  $ note "[e1|c1|d1]"
  # sound "supersiren"
  # gain 1.1 # shape 0.2
  # pan (slow 3 $ rand)
  |+ shape (rand * 0.3)
  # tremr (irand 2) # tremdp (irand 3)

d3
  $ often (|- speed "0.2")
  $ degradeBy 0.25
  $ note (scale "chromatic" (run 4))
  # sound "bass2:3"
  # lpf 1500
  # shape 0.3 # gain 1.2

d4
  $ sometimes (off 0.125 (|+ up 4))
  $ stut 10 0.75 0.25
  $ slow 8
  $ sound "cp cp? cp/2 cp/3"
  # speed 0.2
  # shape 0.4
  # vowel "[a|i|o]"

d5
  $ rarely (degrade)
  $ often (|+ gain 0.3)
  $ superimpose (chop 8)
  $ stack[
    sound "hh27(5,8)" # n (irand 4) # gain 1,
    slowcat [
      degrade $ sound "hh*8" # n 0 # speed 1.5 # gain 1,
      degrade $ sound "hh*8" # n 0 # speed 1.5 # gain 1,
      degrade $ sound "hh*8" # n 0 # speed 1.5 # gain 1,
      degrade $ sound "hh*8" # n 0 # speed 1.5 # gain 1,
      degrade $ sound "hh*16" # n 0 # speed 1.5 # gain 1.2
    ]
  ]
  # orbit 5 # size 0.5 # room 0.5
  |+ room (rand * 0.4) |+ size (rand * 0.4)

d6
  $ degradeBy 0.1
  $ fast 2
  $ superimpose (rev)
  $ sound "jazz:3(5,8)"
  # speed 1.2
  # squiz 2.3
  # shape 0.4

d7
  $ slow 8
  $ note "[c'maj, c2*8]"
  # sound "superfm"
  # attack 1 # hold 4 # release 1
  # gain 1.2 # shape 0.4

xfadeIn 7 16 $ silence

hush

#!espeak

|repeat 75

resistance.
is.
futile.
.
you will.
be assimilated.
.
human beings.

#!obs
|repeat 2

scene.set scene6

record.start

record.stop
